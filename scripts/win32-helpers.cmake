set(CMAKE_MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
if(CMAKE_HOST_SYSTEM_NAME STREQUAL "Windows")
    set(WIN32_HOST ON)
elseif (WIN32)
    set(WIN32_HOST OFF)
endif ()

function(wlibc_setup wlibc_dir)
    if (WIN32)
        set(BUILD_TESTING OFF)
        set(ENABLE_DLFCN OFF CACHE BOOL "")
        set(ENABLE_LANGINFO OFF CACHE BOOL "")
        set(ENABLE_EXTENDED_ATTRIBUTES OFF CACHE BOOL "")
        set(ENABLE_ACCOUNTS OFF CACHE BOOL "")
        set(ENABLE_TERMIOS OFF CACHE BOOL "")
        set(ENABLE_WCHAR_EXT OFF CACHE BOOL "")
        add_subdirectory(${wlibc_dir} EXCLUDE_FROM_ALL)
        set_property(TARGET wlibc PROPERTY FOLDER "ThirdPartyLibraries")
        set(WLIBC_LIBRARY "${CMAKE_BINARY_DIR}/wlibc${W32LIBSUFFIX}.lib" CACHE INTERNAL "WLIBC_LIBRARY")
        set(WLIBC_INCLUDE_DIR "${CMAKE_SOURCE_DIR}/${wlibc_dir}/include" CACHE INTERNAL "WLIBC_INCLUDE_DIR")
        set(WLIBC_DEFINES "__forceinline=static\ inline\ __attribute__((always_inline))" CACHE INTERNAL "WLIBC_DEFINES")
    endif ()
endfunction ()

function(win32_library target includes)
    if (WIN32)
        target_compile_definitions(${target} PUBLIC ${WLIBC_DEFINES})
        if (includes)
            target_include_directories(${target} PUBLIC ${WLIBC_INCLUDE_DIR})
        endif ()
        target_link_libraries(${target} PRIVATE ${WLIBC_LIBRARY})
    else ()
        target_link_libraries(${target} PRIVATE clap_compat)
    endif ()
endfunction ()

function(win32_executable target)
    target_link_libraries(${target} PRIVATE clap_compat)
    if (WIN32)
        win32_library(${target} TRUE)
        target_link_libraries(${target} PRIVATE ntdll Netapi32)
        target_link_options(${target} PRIVATE /ENTRY:wmainCRTStartup /SUBSYSTEM:CONSOLE)
    endif ()
endfunction ()
